{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/my-new-app/src/components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const clickTo = () => {\n    // console.log(\"text clicked\");\n    let uperText = text.toUpperCase();\n    setText(uperText);\n    props.showAlert(\"Uppercase is converted\", \"success\");\n  };\n\n  const clickTolover = () => {\n    let uperText = text.toLowerCase();\n    setText(uperText);\n    props.showAlert(\"lowercase is converted\", \"success\");\n  };\n\n  const clickToclear = () => {\n    let uperText = \"\";\n    setText(uperText);\n    props.showAlert(\"text clear\", \"success\");\n  };\n\n  const clickTocspes = () => {\n    let uperText = text.charAt(0).toUpperCase() + text.slice(1);\n    setText(uperText);\n  };\n\n  const hande = event => {\n    console.log(\"changed text\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('this is my hooks');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'gray' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          className: \"form-control\",\n          rows: \"10\",\n          onChange: hande\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mx-1\",\n        onClick: clickTo,\n        children: \"convert text uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mx-1\",\n        onClick: clickTolover,\n        children: \"convert text lourcase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mx-1\",\n        onClick: clickToclear,\n        children: \"clear text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mx-1\",\n        onClick: clickTocspes,\n        children: \"capes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"yout text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Words \", text.split(\" \").length, \" and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : 'please enter text in text box'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} /////rfc//////\n\n_s(TextForm, \"LzeYh9ZpX+Fn8hCJt9KhsC6pay4=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/my-new-app/src/components/TextForm.js"],"names":["React","useState","TextForm","props","clickTo","uperText","text","toUpperCase","setText","showAlert","clickTolover","toLowerCase","clickToclear","clickTocspes","charAt","slice","hande","event","console","log","target","value","color","mode","heading","backgroundColor","split","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nexport default function TextForm(props) {\n\n    const clickTo = ()=>{\n        // console.log(\"text clicked\");\n        let uperText = text.toUpperCase();\n        setText(uperText);\n        props.showAlert(\"Uppercase is converted\", \"success\");\n    }\n    const clickTolover = ()=>{\n        let uperText = text.toLowerCase();\n        setText(uperText);\n        props.showAlert(\"lowercase is converted\", \"success\");\n\n    }\n    const clickToclear = ()=>{\n        let uperText = \"\";\n        setText(uperText);\n        props.showAlert(\"text clear\", \"success\");\n\n    }\n    const clickTocspes = ()=>{\n        let uperText = text.charAt(0).toUpperCase() + text.slice(1);\n        setText(uperText);\n    }\n    const hande = (event)=>{\n        console.log(\"changed text\");\n        setText(event.target.value)\n    }\n    \n    const [text, setText] = useState('this is my hooks');\n   \n\n    return (\n    <>\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}} >\n        <h2>{props.heading}</h2>\n            <div className=\"mb-3\">\n                <textarea value={text} style={{backgroundColor: props.mode === 'dark'?'gray':'white',color: props.mode === 'dark'?'white':'black'}}  className=\"form-control\" rows=\"10\"  onChange={hande} ></textarea>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={clickTo} >convert text uppercase</button>\n            <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={clickTolover} >convert text lourcase</button>\n            <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={clickToclear} >clear text</button>\n            <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={clickTocspes} >capes</button>\n        </div>\n\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\n        <h2>yout text summary</h2>\n        <p>Words {text.split(\" \").length} and {text.length} characters</p>\n        <p>{0.008 * text.split(\" \").length} minutes to read</p>\n        <h2>preview</h2>\n        <p>{text.length>0?text:'please enter text in text box'}</p>\n        </div>\n\n    </>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n/////rfc//////\n"]},"metadata":{},"sourceType":"module"}