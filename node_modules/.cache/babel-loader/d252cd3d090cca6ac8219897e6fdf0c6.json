{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/my-new-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { useState } from 'react';\nimport TextForm from './components/TextForm';\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route //Link\n} from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"gray\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = 'My Frist App - Dark mode enabled';\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode is enabled\", \"success\");\n      document.title = 'My Frist App - Light mode enabled';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"propes in title\",\n      aboutText: \"about us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Hfaih7U57CCUbx8mYoqLc0MRXzA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/my-new-app/src/App.js"],"names":["Navbar","Alert","About","useState","TextForm","React","BrowserRouter","Router","Switch","Route","App","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,CAIE;AAJF,OAKO,kBALP;;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;AAGA,QAAMY,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAiB;AACjCH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAAEF,OADE;AAEPC,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAI;AACbL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAER,IAFQ,CAAV;AAGD,GARD;;AASA,QAAMM,UAAU,GAAG,MAAI;AACnB,QAAGT,IAAI,KAAK,OAAZ,EAAoB;AAClBC,MAAAA,OAAO,CAAE,MAAF,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAT,MAAAA,SAAS,CAAC,sBAAD,EAAyB,SAAzB,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAiB,kCAAjB;AACD,KALD,MAMI;AACJb,MAAAA,OAAO,CAAE,OAAF,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACAT,MAAAA,SAAS,CAAC,uBAAD,EAA0B,SAA1B,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAiB,mCAAjB;AAED;AACF,GAdD;;AAeA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAS,MAAA,KAAK,EAAC,iBAAf;AAAiC,MAAA,SAAS,EAAC,UAA3C;AAAsD,MAAA,IAAI,EAAEd,IAA5D;AAAkE,MAAA,UAAU,EAAES;AAA9E;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAQ,MAAA,KAAK,EAAEP;AAAf;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAiBD;;GA9CQH,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { useState } from 'react';\nimport TextForm from './components/TextForm';\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n  }\n  const toggleMode = ()=>{\n      if(mode === 'light'){\n        setmode ('dark');\n        document.body.style.backgroundColor = \"gray\";\n        showAlert(\"Dark mode is enabled\", \"success\");\n        document.title = 'My Frist App - Dark mode enabled';\n      }\n      else{\n      setmode ('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode is enabled\", \"success\");\n      document.title = 'My Frist App - Light mode enabled';\n\n    }\n  }\n  return (\n    <>\n    <Navbar  title=\"propes in title\" aboutText=\"about us\" mode={mode} toggleMode={toggleMode} />\n    <Alert  alert={alert} />\n    {/* <Router>\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\">\n          <TextForm heading=\"this is ha props heading\" mode={mode} showAlert={showAlert} />\n        </Route>\n      </Switch>\n    </Router> */}\n    {/* <TextForm heading=\"this is ha props heading\" mode={mode} showAlert={showAlert} /> */}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}